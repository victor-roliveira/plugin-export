<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CefSharp.Wpf.HwndHost</name>
    </assembly>
    <members>
        <member name="T:CefSharp.Wpf.HwndHost.CefSettings">
            <summary>
            Initialization settings. Many of these and other settings can also configured using command-line switches.
            </summary>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser">
            <summary>
            ChromiumWebBrowser is the WPF web browser control
            </summary>
            <seealso cref="T:System.Windows.Controls.Control" />
            <seealso cref="T:CefSharp.Wpf.HwndHost.IWpfWebBrowser" />
            based on https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/walkthrough-hosting-a-win32-control-in-wpf
            and https://stackoverflow.com/questions/6500336/custom-dwm-drawn-window-frame-flickers-on-resizing-if-the-window-contains-a-hwnd/17471534#17471534
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.hwndHost">
            <summary>
            Handle we'll use to host the browser
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.managedCefBrowserAdapter">
            <summary>
            The managed cef browser adapter
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ignoreUriChange">
            <summary>
            The ignore URI change
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.initialAddress">
            <summary>
            Initial address
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.initialLoadCalled">
            <summary>
            Used to stop multiple threads trying to load the initial Url multiple times.
            If the Address property is bound after the browser is initialized
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.browserCreated">
            <summary>
            Has the underlying Cef Browser been created (slightly different to initliazed in that
            the browser is initialized in an async fashion)
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.browserInitialized">
            <summary>
            The browser initialized - boolean represented as 0 (false) and 1(true) as we use Interlocker to increment/reset
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.browser">
            <summary>
            The browser
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.browserSettings">
            <summary>
            Browser initialization settings
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.requestContext">
            <summary>
            The request context (we deliberately use a private variable so we can throw an exception if
            user attempts to set after browser created)
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DesignMode">
            <summary>
            A flag that indicates whether or not the designer is active
            NOTE: Needs to be static for OnApplicationExit
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.disposeSignaled">
            <summary>
            The value for disposal, if it's 1 (one) then this instance is either disposed
            or in the process of getting disposed
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.removeExNoActivateStyle">
            <summary>
            If true the the WS_EX_NOACTIVATE style will be removed so that future mouse clicks
            inside the browser correctly activate and focus the window.
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.dpiScale">
            <summary>
            Current DPI Scale
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.sourceWindow">
            <summary>
            The HwndSource RootVisual (Window) - We store a reference
            to unsubscribe event handlers
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.previousWindowState">
            <summary>
            Store the previous window state, used to determine if the
            Windows was previous <see cref="F:System.Windows.WindowState.Minimized"/>
            and resume rendering
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.initialFocus">
            <summary>
            This flag is set when the browser gets focus before the underlying CEF browser
            has been initialized.
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.initialLoadTaskCompletionSource">
            <summary>
            Initial browser load task complection source
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.initialLoadAction">
            <summary>
            Initial browser load action
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ActivateBrowserOnCreation">
            <summary>
            Activates browser upon creation, the default value is false. Prior to version 73
            the default behaviour was to activate browser on creation (Equivilent of setting this property to true).
            To restore this behaviour set this value to true immediately after you create the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> instance.
            https://bitbucket.org/chromiumembedded/cef/issues/1856/branch-2526-cef-activates-browser-window
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value><see langword="true" /> if this instance is disposed; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.BrowserSettings">
            <summary>
            Gets or sets the browser settings.
            </summary>
            <value>The browser settings.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>The request context.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDialogHandler" /> and assign to handle dialog events.
            </summary>
            <value>The dialog handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.JsDialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IJsDialogHandler" /> and assign to handle events related to JavaScript Dialogs.
            </summary>
            <value>The js dialog handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.KeyboardHandler">
            <summary>
            Implement <see cref="T:CefSharp.IKeyboardHandler" /> and assign to handle events related to key press.
            </summary>
            <value>The keyboard handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.RequestHandler">
            <summary>
            Implement <see cref="T:CefSharp.IRequestHandler" /> and assign to handle events related to browser requests.
            </summary>
            <value>The request handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DownloadHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDownloadHandler" /> and assign to handle events related to downloading files.
            </summary>
            <value>The download handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LoadHandler">
            <summary>
            Implement <see cref="T:CefSharp.ILoadHandler" /> and assign to handle events related to browser load status.
            </summary>
            <value>The load handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LifeSpanHandler">
            <summary>
            Implement <see cref="T:CefSharp.ILifeSpanHandler" /> and assign to handle events related to popups.
            </summary>
            <value>The life span handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DisplayHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDisplayHandler" /> and assign to handle events related to browser display state.
            </summary>
            <value>The display handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.MenuHandler">
            <summary>
            Implement <see cref="T:CefSharp.IContextMenuHandler" /> and assign to handle events related to the browser context menu
            </summary>
            <value>The menu handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.FocusHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFocusHandler" /> and assign to handle events related to the browser component's focus
            </summary>
            <value>The focus handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DragHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDragHandler" /> and assign to handle events related to dragging.
            </summary>
            <value>The drag handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ResourceRequestHandlerFactory">
            <summary>
            Implement <see cref="T:CefSharp.IResourceRequestHandlerFactory" /> and control the loading of resources
            </summary>
            <value>The resource handler factory.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.RenderProcessMessageHandler">
            <summary>
            Implement <see cref="T:CefSharp.IRenderProcessMessageHandler" /> and assign to handle messages from the render process.
            </summary>
            <value>The render process message handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.FindHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFindHandler" /> to handle events related to find results.
            </summary>
            <value>The find handler.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.AudioHandler">
            <summary>
            Implement <see cref="T:CefSharp.IAudioHandler" /> to handle audio events.
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.FrameHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFrameHandler" /> to handle frame events.
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.PermissionHandler">
            <summary>
            Implement <see cref="T:CefSharp.IPermissionHandler" /> to handle events related to permission requests.
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ConsoleMessage">
            <summary>
            Event handler for receiving Javascript console messages being sent from web pages.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            (The exception to this is when your running with settings.MultiThreadedMessageLoop = false, then they'll be the same thread).
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.StatusMessage">
            <summary>
            Event handler for changes to the status message.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang.
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            (The exception to this is when your running with settings.MultiThreadedMessageLoop = false, then they'll be the same thread).
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.FrameLoadStart">
            <summary>
            Event handler that will get called when the browser begins loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method may not be called for a
            particular frame if the load request for that frame fails. For notification of overall browser load status use
            OnLoadingStateChange instead.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            </summary>
            <remarks>Whilst this may seem like a logical place to execute js, it's called before the DOM has been loaded, implement
            <see cref="M:CefSharp.IRenderProcessMessageHandler.OnContextCreated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)" /> as it's called when the underlying V8Context is created
            </remarks>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.FrameLoadEnd">
            <summary>
            Event handler that will get called when the browser is done loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method will always be called
            for all frames irrespective of whether the request completes successfully.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LoadError">
            <summary>
            Event handler that will get called when the resource load for a navigation fails or is canceled.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LoadingStateChanged">
            <summary>
            Event handler that will get called when the Loading state has changed.
            This event will be fired twice. Once when loading is initiated either programmatically or
            by user action, and once when loading is terminated due to completion, cancellation of failure.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread.
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.JavascriptMessageReceived">
            <summary>
            Event handler that will get called when the message that originates from CefSharp.PostMessage
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.BackCommand">
            <summary>
            Navigates to the previous page in the browser history. Will automatically be enabled/disabled depending on the
            browser state.
            </summary>
            <value>The back command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ForwardCommand">
            <summary>
            Navigates to the next page in the browser history. Will automatically be enabled/disabled depending on the
            browser state.
            </summary>
            <value>The forward command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ReloadCommand">
            <summary>
            Reloads the content of the current page. Will automatically be enabled/disabled depending on the browser state.
            </summary>
            <value>The reload command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.PrintCommand">
            <summary>
            Prints the current browser contents.
            </summary>
            <value>The print command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomInCommand">
            <summary>
            Increases the zoom level.
            </summary>
            <value>The zoom in command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomOutCommand">
            <summary>
            Decreases the zoom level.
            </summary>
            <value>The zoom out command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomResetCommand">
            <summary>
            Resets the zoom level to the default. (100%)
            </summary>
            <value>The zoom reset command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ViewSourceCommand">
            <summary>
            Opens up a new program window (using the default text editor) where the source code of the currently displayed web
            page is shown.
            </summary>
            <value>The view source command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CleanupCommand">
            <summary>
            Command which cleans up the Resources used by the ChromiumWebBrowser
            </summary>
            <value>The cleanup command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.StopCommand">
            <summary>
            Stops loading the current page.
            </summary>
            <value>The stop command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CutCommand">
            <summary>
            Cut selected text to the clipboard.
            </summary>
            <value>The cut command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CopyCommand">
            <summary>
            Copy selected text to the clipboard.
            </summary>
            <value>The copy command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.PasteCommand">
            <summary>
            Paste text from the clipboard.
            </summary>
            <value>The paste command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.SelectAllCommand">
            <summary>
            Select all text.
            </summary>
            <value>The select all command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.UndoCommand">
            <summary>
            Undo last action.
            </summary>
            <value>The undo command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.RedoCommand">
            <summary>
            Redo last action.
            </summary>
            <value>The redo command.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.canExecuteJavascriptInMainFrameId">
            <summary>
            Used as workaround for issue https://github.com/cefsharp/CefSharp/issues/3021
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CanExecuteJavascriptInMainFrame">
            <summary>
            A flag that indicates if you can execute javascript in the main frame.
            Flag is set to true in IRenderProcessMessageHandler.OnContextCreated.
            and false in IRenderProcessMessageHandler.OnContextReleased
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.#cctor">
            <summary>
            Initializes static members of the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> class.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DispatcherShutdownStarted(System.Object,System.EventArgs)">
            <summary>
            Handles Dispatcher Shutdown
            </summary>
            <param name="sender">sender</param>
            <param name="e">eventargs</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnApplicationExit(System.Object,System.Windows.ExitEventArgs)">
            <summary>
            Handles the <see cref="E:ApplicationExit" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.ExitEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefPreShutdown">
            <summary>
            Required for designer support - this method cannot be inlined as the designer
            will attempt to load libcef.dll and will subsequently throw an exception.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefShutdown">
            <summary>
            Required for designer support - this method cannot be inlined as the designer
            will attempt to load libcef.dll and will subsiquently throw an exception.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">Cef::Initialize() failed</exception>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> instance.
            </summary>
            <param name="initialAddress">address to load initially</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.NoInliningConstructor">
            <summary>
            Constructor logic has been moved into this method
            Required for designer support - this method cannot be inlined as the designer
            will attempt to load libcef.dll and will subsiquently throw an exception.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.Dispose(System.Boolean)">
            <summary>
            If not in design mode; Releases unmanaged and - optionally - managed resources for the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/>
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.InternalDispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources for the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/>
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
            <remarks>
            This method cannot be inlined as the designer will attempt to load libcef.dll and will subsiquently throw an exception.
            </remarks>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetAddress(CefSharp.AddressChangedEventArgs)">
            <summary>
            Sets the address.
            </summary>
            <param name="args">The <see cref="T:CefSharp.AddressChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetLoadingStateChange(CefSharp.LoadingStateChangedEventArgs)">
            <summary>
            Sets the loading state change.
            </summary>
            <param name="args">The <see cref="T:CefSharp.LoadingStateChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetTitle(CefSharp.TitleChangedEventArgs)">
            <summary>
            Sets the title.
            </summary>
            <param name="args">The <see cref="T:CefSharp.TitleChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetTooltipText(System.String)">
            <summary>
            Sets the tooltip text.
            </summary>
            <param name="tooltipText">The tooltip text.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadStart(CefSharp.FrameLoadStartEventArgs)">
            <summary>
            Handles the <see cref="E:FrameLoadStart" /> event.
            </summary>
            <param name="args">The <see cref="T:CefSharp.FrameLoadStartEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadEnd(CefSharp.FrameLoadEndEventArgs)">
            <summary>
            Handles the <see cref="E:FrameLoadEnd" /> event.
            </summary>
            <param name="args">The <see cref="T:CefSharp.FrameLoadEndEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnConsoleMessage(CefSharp.ConsoleMessageEventArgs)">
            <summary>
            Handles the <see cref="E:ConsoleMessage" /> event.
            </summary>
            <param name="args">The <see cref="T:CefSharp.ConsoleMessageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnStatusMessage(CefSharp.StatusMessageEventArgs)">
            <summary>
            Handles the <see cref="E:StatusMessage" /> event.
            </summary>
            <param name="args">The <see cref="T:CefSharp.StatusMessageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnLoadError(CefSharp.LoadErrorEventArgs)">
            <summary>
            Handles the <see cref="E:LoadError" /> event.
            </summary>
            <param name="args">The <see cref="T:CefSharp.LoadErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#BrowserAdapter">
            <summary>
            Gets the browser adapter.
            </summary>
            <value>The browser adapter.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#HasParent">
            <summary>
            Gets or sets a value indicating whether this instance has parent.
            </summary>
            <value><c>true</c> if this instance has parent; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnAfterBrowserCreated(CefSharp.IBrowser)">
            <summary>
            Called when [after browser created].
            </summary>
            <param name="browser">The browser.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CanGoBack">
            <summary>
            A flag that indicates whether the state of the control current supports the GoBack action (true) or not (false).
            </summary>
            <value><c>true</c> if this instance can go back; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CanGoBackProperty">
            <summary>
            The can go back property
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CanGoForward">
            <summary>
            A flag that indicates whether the state of the control currently supports the GoForward action (true) or not (false).
            </summary>
            <value><c>true</c> if this instance can go forward; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CanGoForwardProperty">
            <summary>
            The can go forward property
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.Address">
            <summary>
            The address (URL) which the browser control is currently displaying.
            Will automatically be updated as the user navigates to another page (e.g. by clicking on a link).
            </summary>
            <value>The address.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.AddressProperty">
            <summary>
            The address property
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnAddressChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:AddressChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnAddressChanged(System.String,System.String)">
            <summary>
            Called when [address changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsLoading">
            <summary>
            A flag that indicates whether the control is currently loading one or more web pages (true) or not (false).
            </summary>
            <value><c>true</c> if this instance is loading; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsLoadingProperty">
            <summary>
            The is loading property
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsBrowserInitialized">
            <summary>
            A flag that indicates whether the WebBrowser is initialized (true) or not (false).
            </summary>
            <value><c>true</c> if this instance is browser initialized; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsBrowserInitializedChanged">
            <summary>
            Event called after the underlying CEF browser instance has been created and
            when the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> instance has been Disposed.
            <see cref="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.IsBrowserInitialized"/> will be true when the underlying CEF Browser
            has been created and false when the browser is being Disposed.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnIsBrowserInitializedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when [is browser initialized changed].
            </summary>
            <param name="oldValue">if set to <c>true</c> [old value].</param>
            <param name="newValue">if set to <c>true</c> [new value].</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.Title">
            <summary>
            The title of the web page being currently displayed.
            </summary>
            <value>The title.</value>
            <remarks>This property is implemented as a Dependency Property and fully supports data binding.</remarks>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TitleProperty">
            <summary>
            The title property
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TitleChanged">
            <summary>
            Event handler that will get called when the browser title changes
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnTitleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:TitleChanged" /> event.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomLevel">
            <summary>
            The zoom level at which the browser control is currently displaying.
            Can be set to 0 to clear the zoom level (resets to default zoom level).
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomLevelProperty">
            <summary>
            The zoom level property
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnZoomLevelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ZoomLevelChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnZoomLevelChanged(System.Double,System.Double)">
            <summary>
            Called when [zoom level changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomLevelIncrement">
            <summary>
            Specifies the amount used to increase/decrease to ZoomLevel by
            By Default this value is 0.10
            </summary>
            <value>The zoom level increment.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomLevelIncrementProperty">
            <summary>
            The zoom level increment property
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CleanupElement">
            <summary>
            The CleanupElement controls when the Browser will be Disposed.
            The <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser"/> will be Disposed when <see cref="E:System.Windows.FrameworkElement.Unloaded"/> is called.
            Be aware that this Control is not usable anymore after it has been disposed.
            </summary>
            <value>The cleanup element.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CleanupElementProperty">
            <summary>
            The cleanup element property
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnCleanupElementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:CleanupElementChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnCleanupElementChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Called when [cleanup element changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnCleanupElementUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the <see cref="E:CleanupElementUnloaded" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TooltipText">
            <summary>
            The text that will be displayed as a ToolTip
            </summary>
            <value>The tooltip text.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TooltipTextProperty">
            <summary>
            The tooltip text property
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.WebBrowser">
            <summary>
            Gets or sets the WebBrowser.
            </summary>
            <value>The WebBrowser.</value>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.WebBrowserProperty">
            <summary>
            The WebBrowser property
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CreateBrowserWindowInfo(System.IntPtr)">
             <summary>
             Override this method to handle creation of WindowInfo. This method can be used to customise aspects of
             browser creation including configuration of settings such as <see cref="P:CefSharp.IWindowInfo.ExStyle"/>.
             Window Activation is disabled by default, you can re-enable it by overriding and removing the
             WS_EX_NOACTIVATE style from <see cref="P:CefSharp.IWindowInfo.ExStyle"/>.
             </summary>
             <param name="handle">Window handle for the Control</param>
             <returns>Window Info</returns>
             <example>
             To re-enable Window Activation then remove WS_EX_NOACTIVATE from ExStyle
             <code>
             const uint WS_EX_NOACTIVATE = 0x08000000;
             windowInfo.ExStyle &amp;= ~WS_EX_NOACTIVATE;
            </code>
             </example>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.UiThreadRunAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Runs the specific Action on the Dispatcher in an async fashion
            </summary>
            <param name="action">The action.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.OnIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:IsVisibleChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.Load(System.String)">
            <summary>
            Loads the specified URL.
            </summary>
            <param name="url">The URL to be loaded.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LoadUrlAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomIn">
            <summary>
            Zooms the browser in.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomOut">
            <summary>
            Zooms the browser out.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ZoomReset">
            <summary>
            Reset the browser's zoom level to default.
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.JavascriptObjectRepository">
            <summary>
            The javascript object repository, one repository per ChromiumWebBrowser instance.
            </summary>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.BrowserCore">
            <inheritdoc />
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CefSharp#Internals#IWebBrowserInternal#DevToolsContext">
            <summary>
            Used by CefSharp.Puppeteer to associate a single DevToolsContext with a ChromiumWebBrowser instance.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.GetBrowser">
            <summary>
            Returns the current IBrowser Instance
            </summary>
            <returns>browser instance or null</returns>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.InternalIsBrowserInitialized">
            <summary>
            Check is browserisinitialized
            </summary>
            <returns>true if browser is initialized</returns>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ResizeBrowser(System.Int32,System.Int32)">
            <summary>
            Resizes the browser.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.LoadUrl(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.WaitForInitialLoadAsync">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.TryGetBrowserCoreById(System.Int32,CefSharp.IBrowser@)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.GetContentSizeAsync">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.WaitForNavigationAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.CaptureScreenshotAsync(CefSharp.DevTools.Page.CaptureScreenshotFormat,System.Nullable{System.Int32},CefSharp.DevTools.Page.Viewport,System.Boolean,System.Boolean)">
            <summary>
            Capture page screenshot.
            </summary>
            <param name="format">Image compression format (defaults to png).</param>
            <param name="quality">Compression quality from range [0..100] (jpeg only).</param>
            <param name="viewPort">Capture the screenshot of a given region only.</param>
            <param name="fromSurface">Capture the screenshot from the surface, rather than the view. Defaults to true.</param>
            <param name="captureBeyondViewport">Capture the screenshot beyond the viewport. Defaults to false.</param>
            <returns>A task that can be awaited to obtain the screenshot as a byte[].</returns>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ThrowExceptionIfBrowserNotInitialized">
            <summary>
            Throw exception if browser not initialized.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.ChromiumWebBrowser.ThrowExceptionIfDisposed">
            <summary>
            Throw exception if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Thrown when a supplied object has been disposed.</exception>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.FocusHandler">
            <summary>
            Focus Handler
            The methods of this class will be called on the CEF UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.FocusHandler.OnGotFocus(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called when the browser component has received focus.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.FocusHandler.OnSetFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFocusSource)">
            <summary>
            Called when the browser component is requesting focus.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object, do not keep a reference to this object outside of this method</param>
            <param name="source">Indicates where the focus request is originating from.</param>
            <returns>Return false to allow the focus to be set or true to cancel setting the focus.</returns>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.FocusHandler.OnTakeFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean)">
            <summary>
            Called when the browser component is about to lose focus.
            For instance, if focus was on the last HTML element and the user pressed the TAB key.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="next">Will be true if the browser is giving focus to the next component
            and false if the browser is giving focus to the previous component.</param>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler">
            <summary>
            A <see cref="T:CefSharp.IBrowserProcessHandler"/> implementation that can be used to
            integreate CEF into the WPF message loop (Dispatcher).
            Currently it's a very basic implementation.
            See the following link for the CEF reference implementation.
            https://bitbucket.org/chromiumembedded/cef/commits/1ff26aa02a656b3bc9f0712591c92849c5909e04?at=2785
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.SixtyTimesPerSecond">
            <summary>
            Sixty Times per second
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.ThirtyTimesPerSecond">
            <summary>
            Thirty Times per second
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="dispatcher">WPF Dispatcher</param>
            <param name="dispatcherPriority">Priority at which <see cref="M:CefSharp.Cef.DoMessageLoopWork"/> is called using the Dispatcher</param>
            <param name="interval">the <see cref="P:System.Timers.Timer.Interval"/> in miliseconds (frame rate), for 30/60 times per second use
            <see cref="F:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.ThirtyTimesPerSecond"/>/<see cref="F:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.SixtyTimesPerSecond"/> respectively.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.OnScheduleMessagePumpWork(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Handler.IntegratedMessageLoopBrowserProcessHandler.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.Internals.DelegateCommand">
            <summary>
            DelegateCommand
            </summary>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.commandHandler">
            <summary>
            The command handler
            </summary>
        </member>
        <member name="F:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.canExecuteHandler">
            <summary>
            The can execute handler
            </summary>
        </member>
        <member name="E:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.Wpf.HwndHost.Internals.DelegateCommand"/> class.
            </summary>
            <param name="commandHandler">The command handler.</param>
            <param name="canExecuteHandler">The can execute handler.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Internals.DelegateCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the can execute changed.
            </summary>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.Internals.NoCloseLifespanHandler">
            <summary>
            LifeSpanHandler used internally
            - Cancels sending of WM_CLOSE message for main browser
            - Allows popups to close
            </summary>
        </member>
        <member name="M:CefSharp.Wpf.HwndHost.Internals.NoCloseLifespanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <inheritdoc/>
        </member>
        <member name="T:CefSharp.Wpf.HwndHost.IWpfWebBrowser">
            <summary>
            WPF specific implementation, has reference to some of the commands
            and properties the <see cref="T:CefSharp.Wpf.HwndHost.ChromiumWebBrowser" /> exposes.
            </summary>
            <seealso cref="T:CefSharp.IWebBrowser" />
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.BackCommand">
            <summary>
            Navigates to the previous page in the browser history. Will automatically be enabled/disabled depending on the
            browser state.
            </summary>
            <value>The back command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ForwardCommand">
            <summary>
            Navigates to the next page in the browser history. Will automatically be enabled/disabled depending on the
            browser state.
            </summary>
            <value>The forward command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ReloadCommand">
            <summary>
            Reloads the content of the current page. Will automatically be enabled/disabled depending on the browser state.
            </summary>
            <value>The reload command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.PrintCommand">
            <summary>
            Prints the current browser contents.
            </summary>
            <value>The print command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomInCommand">
            <summary>
            Increases the zoom level.
            </summary>
            <value>The zoom in command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomOutCommand">
            <summary>
            Decreases the zoom level.
            </summary>
            <value>The zoom out command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomResetCommand">
            <summary>
            Resets the zoom level to the default. (100%)
            </summary>
            <value>The zoom reset command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ViewSourceCommand">
            <summary>
            Opens up a new program window (using the default text editor) where the source code of the currently displayed web
            page is shown.
            </summary>
            <value>The view source command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.CleanupCommand">
            <summary>
            Command which cleans up the Resources used by the ChromiumWebBrowser
            </summary>
            <value>The cleanup command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.StopCommand">
            <summary>
            Stops loading the current page.
            </summary>
            <value>The stop command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.CutCommand">
            <summary>
            Cut selected text to the clipboard.
            </summary>
            <value>The cut command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.CopyCommand">
            <summary>
            Copy selected text to the clipboard.
            </summary>
            <value>The copy command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.PasteCommand">
            <summary>
            Paste text from the clipboard.
            </summary>
            <value>The paste command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.SelectAllCommand">
            <summary>
            Select all text.
            </summary>
            <value>The select all command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.UndoCommand">
            <summary>
            Undo last action.
            </summary>
            <value>The undo command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.RedoCommand">
            <summary>
            Redo last action.
            </summary>
            <value>The redo command.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.Dispatcher">
            <summary>
            Gets the <see cref="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.Dispatcher" /> associated with this instance.
            </summary>
            <value>The dispatcher.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomLevel">
            <summary>
            The zoom level at which the browser control is currently displaying.
            Can be set to 0 to clear the zoom level (resets to default zoom level).
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomLevelIncrement">
            <summary>
            The increment at which the <see cref="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.ZoomLevel" /> property will be incremented/decremented.
            </summary>
            <value>The zoom level increment.</value>
        </member>
        <member name="P:CefSharp.Wpf.HwndHost.IWpfWebBrowser.Title">
            <summary>
            The title of the web page being currently displayed.
            </summary>
            <value>The title.</value>
            <remarks>This property is implemented as a Dependency Property and fully supports data binding.</remarks>
        </member>
    </members>
</doc>
